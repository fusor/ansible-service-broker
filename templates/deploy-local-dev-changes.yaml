# Goal of this template is to create or update the required resources so we can
# run the broker locally yet have it behave as if it's running in the cluster.
# The required changes are:
# - Create a route for our etcd so we can communicate to it
# - Update the asb service/endpoint so it points to our locally running broker
#   Note the asb route will now use our updated service/endpoint to contact our local broker
#   so there is no change from Service Catalog perspective
apiVersion: v1
kind: Template
metadata:
  name: ansible-service-broker-local-development
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: etcd
    labels:
      app: ansible-service-broker
      service: etcd
  spec:
    ports:
      - name: etcd-advertise
        port: 2379
    selector:
      app: ansible-service-broker
      service: etcd

- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: etcd
    labels:
      app: ansible-service-broker
      service: etcd
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ansible-service-broker
        service: etcd
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: ansible-service-broker
          service: etcd
      spec:
        containers:
        - image: ${ETCD_IMAGE}
          name: etcd
          imagePullPolicy: IfNotPresent
          terminationMessagePath: /tmp/termination-log
          workingDir: /etcd
          args:
            - ${ETCD_PATH}
            - --data-dir=/data
            - --listen-client-urls=http://0.0.0.0:2379
            - --advertise-client-urls=http://0.0.0.0:2379
          ports:
          - containerPort: 2379
            protocol: TCP
          env:
          - name: ETCDCTL_API
            value: "3"
          volumeMounts:
            - mountPath: /data
              name: etcd
        volumes:
          - name: etcd
            persistentVolumeClaim:
              claimName: etcd

- apiVersion: v1
  kind: Route
  metadata:
    name: asb-etcd
    labels:
      app: etcd
      service: asb-etcd
  spec:
    to:
      kind: Service
      name: etcd
    port:
      targetPort: ${ETCD_TARGET_PORT}

- apiVersion: v1
  kind: Route
  metadata:
    name: asb-1338
    labels:
      app: ansible-service-broker
      service: asb
  spec:
    to:
      kind: Service
      name: asb
    port:
      targetPort: port-1338
    tls:
      termination: ${TERMINATION}

- apiVersion: v1
  kind: Endpoints
  metadata:
    labels:
      app: ansible-service-broker
      service: asb
    name: asb
  subsets:
  - addresses:
    - ip: ${BROKER_IP_ADDR}
    ports:
    - name: port-${BROKER_PORT}
      port: ${BROKER_PORT}
      protocol: TCP

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ansible-service-broker
      service: asb
    name: asb
  spec:
    ports:
    -
      name: port-${BROKER_PORT}
      port: ${BROKER_PORT}
      protocol: TCP
      #targetPort: ${BROKER_PORT}
      nodePort: 0
  selector: {}

parameters:
- description: Name of the etcd target port to connect to
  displayname: ETCD_TARGET_PORT
  name: ETCD_TARGET_PORT
  value: etcd-advertise

- description: Brokers port
  displayname: BROKER_PORT
  name: BROKER_PORT
  value: "1338"

- description: Brokers IP Address
  displayname: BROKER_IP_ADDR
  name: BROKER_IP_ADDR

- description: Container Image to use for etcd in format of imagename:tag
  displayname: etcd Image
  name: ETCD_IMAGE
  value: quay.io/coreos/etcd:latest

- description: Path of the etcd binary
  displayname: etcd path
  name: ETCD_PATH
  value: /usr/local/bin/etcd

- description: Route termination policy
  displayname: Termination policy
  name: TERMINATION
  value: edge
